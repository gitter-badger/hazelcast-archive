#summary Memcache Client
== Memcache Client ==

A Memcache client written in any language can talk directly to Hazelcast cluster.
No additional configuration is required. Here is an example:

Let's say your cluster's members are:
{{{
Members [5] {
    Member [10.20.17.1:5701]
    Member [10.20.17.2:5701]
    Member [10.20.17.4:5701]
    Member [10.20.17.3:5701]
    Member [10.20.17.5:5701]
 }
}}}
And you have a PHP application that uses PHP Memcache client to cache things in Hazelcast. All you need to
do is have your PHP memcache client connect to one of these members.
It doesn't matter which member the client connects to because Hazelcast
cluster looks as one giant machine (Single System Image).

PHP client code sample:
{{{
<?php
    $memcache = new Memcache;
    $memcache->connect('10.20.17.1', 5701) or die ("Could not connect");
    $memcache->set('key1','value1',0,3600);
    $get_result = $memcache->get('key1'); //retrieve your data
    var_dump($get_result); //show it
?>
}}}
Notice that memcache client is connecting to `10.20.17.1` and using port `5701`.

Java client code sample with SpyMemcached client:
{{{
MemcachedClient client = new MemcachedClient(AddrUtil.getAddresses("10.20.17.1:5701 10.20.17.2:5701"));
client.set("key1", 3600, "value1");
System.out.println(client.get("key1"));
}}}

An entry written with a memcache client can be read by another memcache client written in another language.
