<?xml version='1.0' encoding='UTF-8'?>
<sect1 xml:id="ConfigGroup" version='5.0' xmlns='http://docbook.org/ns/docbook'
        >
    <title>Creating Separate Clusters</title>
    <para>
        By specifying group-name and group-password, you can separate your clusters in a simple way; dev group,
        production group, test group, app-a group etc...

        <programlisting language="xml"><![CDATA[<hazelcast>
    <group>
        <name>dev</name>
        <password>dev-pass</password>
    </group>
    ...
</hazelcast>
]]></programlisting>

    </para>
    <para>
        You can also set the groupName with
        <literal>Config</literal>
        API.
        JVM can host multiple Hazelcast instances (nodes).
        Each node can only participate in one group and it only joins to
        its own group, does not mess with others. Following code creates 3 separate
        Hazelcast nodes,
        <literal>h1</literal>
        belongs to
        <literal>app1</literal>
        cluster, while
        <literal>h2</literal>
        and
        <literal>h3</literal>
        are belong to
        <literal>app2</literal>
        cluster.
        <programlisting language="java"><![CDATA[
Config configApp1 = new Config();
configApp1.getGroupConfig().setName("app1");

Config configApp2 = new Config();
configApp2.getGroupConfig().setName("app2");

HazelcastInstance h1 = Hazelcast.newHazelcastInstance(configApp1);
HazelcastInstance h2 = Hazelcast.newHazelcastInstance(configApp2);
HazelcastInstance h3 = Hazelcast.newHazelcastInstance(configApp2);
]]></programlisting>
    </para>
</sect1>
