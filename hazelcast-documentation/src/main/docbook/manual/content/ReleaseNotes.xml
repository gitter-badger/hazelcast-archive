<?xml version='1.0' encoding='UTF-8'?>
<sect1 xml:id="ReleaseNotes" version='5.0' xmlns='http://docbook.org/ns/docbook'
       xmlns:xlink='http://www.w3.org/1999/xlink'
       xmlns:xi='http://www.w3.org/2001/XInclude'
       xmlns:ns5='http://www.w3.org/2000/svg'
       xmlns:ns4='http://www.w3.org/1998/Math/MathML'
       xmlns:ns3='http://www.w3.org/1999/xhtml'
       xmlns:db='http://docbook.org/ns/docbook'>
    <title>Release Notes</title>
    <para>Please see,
        <link xlink:href="#Todo">Todo</link>
        page for planned features.
    </para>
    <para>
        <emphasis role="bold">1.9.4</emphasis>
        <itemizedlist>
            <listitem>
                <para>New
                    <link xlink:href="#WanReplication">WAN Replication</link>
                    (synchronization of separate active clusters)
                </para>
            </listitem>
            <listitem>
                <para>New
                    <link xlink:href="#DataAffinity">Data Affinity</link>
                    (co-location of related entries) feature.
                </para>
            </listitem>
            <listitem>
                <para>New
                    <link xlink:href="#EC2AutoDiscovery">EC2 Auto Discovery</link>
                    for your Hazelcast cluster
                    running on Amazon EC2 platform.
                </para>
            </listitem>
            <listitem>
                <para>New
                    <link xlink:href="http://www.hazelcast.com/docs/1.9.4/javadoc/com/hazelcast/core/ICountDownLatch.html">
                        Distributed CountDownLatch implementation.
                    </link>
                </para>
            </listitem>
            <listitem>
                <para>New
                    <link xlink:href="http://www.hazelcast.com/docs/1.9.4/javadoc/com/hazelcast/core/ISemaphore.html">
                        Distributed Semaphore implementation.
                    </link>
                </para>
            </listitem>
            <listitem>
                <para>Improvement: Distribution contains HTML and PDF documentation besides Javadoc.</para>
            </listitem>
            <listitem>
                <para>Improvement: Better TCP/IP and multicast join support. Handling more edge cases like
                    multiple nodes starting at the same time.
                </para>
            </listitem>
            <listitem>
                <para>Improvement: Memcache protocol: Better integration between Java and Memcache clients.
                    Put from memcache, get from Java client.
                </para>
            </listitem>
            <listitem>
                <para>Monitoring Tool is removed from the project.</para>
            </listitem>
            <listitem>
                <para>200+ commits 25+ bug fixes and several other enhancements.</para>
            </listitem>
        </itemizedlist>
        <emphasis role="bold">1.9.3</emphasis>
        <itemizedlist>
            <listitem>
                <para>Re-implementation of distributed queue.
                    <itemizedlist>
                        <listitem>
                            <para>Configurable backup-count and synchronous backup.</para>
                        </listitem>
                        <listitem>
                            <para>Persistence support based on backing MapStore</para>
                        </listitem>
                        <listitem>
                            <para>Auto-recovery from backing MapStore on startup.</para>
                        </listitem>
                    </itemizedlist>
                </para>
            </listitem>
            <listitem>
                <para>Re-implementation of distributed list supporting index based operations.
                </para>
            </listitem>
            <listitem>
                <para>New distributed semaphore implementation.</para>
            </listitem>
            <listitem>
                <para>Optimized
                    <literal>IMap.putAll</literal>
                    for much faster bulk writes.
                </para>
            </listitem>
            <listitem>
                <para>New
                    <literal>IMap.getAll</literal>
                    for bulk reads which is calling
                    <literal>MapLoader.loadAll</literal>
                    if necessary.
                </para>
            </listitem>
            <listitem>
                <para>New
                    <literal>IMap.tryLockAndGet</literal>
                    and
                    <literal>IMap.putAndUnlock</literal>
                    API
                </para>
            </listitem>
            <listitem>
                <para>New
                    <literal>IMap.putTransient</literal>
                    API for storing only in-memory.
                </para>
            </listitem>
            <listitem>
                <para>New
                    <literal>IMap.addLocalEntryListener()</literal>
                    for listening locally
                    owned entry events.
                </para>
            </listitem>
            <listitem>
                <para>New
                    <literal>IMap.flush()</literal>
                    for flushing the dirty entries into
                    MapStore.
                </para>
            </listitem>
            <listitem>
                <para>New
                    <literal>MapLoader.getAllKeys</literal>
                    API for auto-pre-populating the
                    map when cluster starts.
                </para>
            </listitem>
            <listitem>
                <para>Support for min. initial cluster size to enable equally partitioned start.
                </para>
            </listitem>
            <listitem>
                <para>Graceful shutdown.</para>
            </listitem>
            <listitem>
                <para>Faster dead-member detection.</para>
            </listitem>
        </itemizedlist>
        <emphasis role="bold">1.9</emphasis>
        <itemizedlist>
            <listitem>
                <para>Memcache interface support. Memcache clients written in any language can
                    access Hazelcast cluster.
                </para>
            </listitem>
            <listitem>
                <para>RESTful access support.
                    <code>http://&lt;ip&gt;:5701/hazelcast/rest/maps/mymap/key1</code>
                </para>
            </listitem>
            <listitem>
                <para>Split-brain (network partitioning) handling</para>
            </listitem>
            <listitem>
                <para>New LifecycleService API to restart, pause Hazelcast instances and listen for
                    the lifecycle events.
                </para>
            </listitem>
            <listitem>
                <para>New asynchronous put and get support for IMap via IMap.asyncPut() and
                    IMap.asyncGet()
                </para>
            </listitem>
            <listitem>
                <para>New AtomicNumber API; distributed implementation of
                    java.util.concurrent.atomic.AtomicLong
                </para>
            </listitem>
            <listitem>
                <para>So many bug fixes.</para>
            </listitem>
        </itemizedlist>
        <emphasis role="bold">1.8.4</emphasis>
        <itemizedlist>
            <listitem>
                <para>Significant performance gain for multi-core servers. Higher CPU utilization
                    and lower latency.
                </para>
            </listitem>
            <listitem>
                <para>Reduced the cost of map entries by 50%.</para>
            </listitem>
            <listitem>
                <para>Better thread management. No more idle threads.</para>
            </listitem>
            <listitem>
                <para>Queue Statistics API and the queue statistics panel on the Monitoring Tool.
                </para>
            </listitem>
            <listitem>
                <para>Monitoring Tool enhancements. More responsive and robust.</para>
            </listitem>
            <listitem>
                <para>Distribution contains hazelcast-all-&lt;version&gt;.jar to simplify jar
                    dependency.
                </para>
            </listitem>
            <listitem>
                <para>So many bug fixes.</para>
            </listitem>
        </itemizedlist>
        <emphasis role="bold">1.8.3</emphasis>
        <itemizedlist>
            <listitem>
                <para>Bug fixes</para>
            </listitem>
            <listitem>
                <para>Sorted index optimization for map queries.</para>
            </listitem>
        </itemizedlist>
        <emphasis role="bold">1.8.2</emphasis>
        <itemizedlist>
            <listitem>
                <para>A major bug fix</para>
            </listitem>
            <listitem>
                <para>Minor optimizations</para>
            </listitem>
        </itemizedlist>
        <emphasis role="bold">1.8.1</emphasis>
        <itemizedlist>
            <listitem>
                <para>Hazelcast Cluster Monitoring Tool (see the hazelcast-monitor-1.8.1.war in the
                    distro)
                </para>
            </listitem>
            <listitem>
                <para>New Partition API. Partition and key owner, migration listeners.</para>
            </listitem>
            <listitem>
                <para>New IMap.lockMap() API.</para>
            </listitem>
            <listitem>
                <para>New Multicast+TCP/IP join feature. Try multicast first, if not found, try
                    tcp/ip.
                </para>
            </listitem>
            <listitem>
                <para>New Hazelcast.getExecutorService(name) API. Have separate named
                    ExecutorServices. Do not let your big tasks blocking your small ones.
                </para>
            </listitem>
            <listitem>
                <para>New Logging API. Build your own logging. or simply use Log4j or get logs as
                    LogEvents.
                </para>
            </listitem>
            <listitem>
                <para>New MapStatistics API. Get statistics for your Map operations and entries.
                </para>
            </listitem>
            <listitem>
                <para>HazelcastClient automatically updates the member list. no need to pass all
                    members.
                </para>
            </listitem>
            <listitem>
                <para>Ability to start the cluster members evenly partitioned. so no migration.
                </para>
            </listitem>
            <listitem>
                <para>So many bug fixes and enhancements.</para>
            </listitem>
            <listitem>
                <para>There are some minor Config API change. Just make sure to re-compile.</para>
            </listitem>
        </itemizedlist>
        <emphasis role="bold">1.8</emphasis>
        <itemizedlist>
            <listitem>
                <para>Java clients for accessing the cluster remotely. (C# is next)</para>
            </listitem>
            <listitem>
                <para>Distributed Query for maps. Both Criteria API and SQL support.</para>
            </listitem>
            <listitem>
                <para>Near cache for distributed maps.</para>
            </listitem>
            <listitem>
                <para>TTL (time-to-live) for each individual map entry.</para>
            </listitem>
            <listitem>
                <para>IMap.put(key,value, ttl, timeunit)</para>
            </listitem>
            <listitem>
                <para>IMap.putIfAbsent(key,value, ttl, timeunit)</para>
            </listitem>
            <listitem>
                <para>Many bug fixes.</para>
            </listitem>
        </itemizedlist>
        <emphasis role="bold">1.7.1</emphasis>
        <itemizedlist>
            <listitem>
                <para>Multiple Hazelcast members on the same JVM. New
                    <literal>HazelcastInstance</literal>
                    API.
                </para>
            </listitem>
            <listitem>
                <para>Better API based configuration support.</para>
            </listitem>
            <listitem>
                <para>Many performance optimizations. Fastest Hazelcast ever!</para>
            </listitem>
            <listitem>
                <para>Smoother data migration enables better response times during joins.</para>
            </listitem>
            <listitem>
                <para>Many bug fixes.</para>
            </listitem>
        </itemizedlist>
        <emphasis role="bold">1.7</emphasis>
        <itemizedlist>
            <listitem>
                <para>Persistence via Loader/Store interface for distributed map.</para>
            </listitem>
            <listitem>
                <para>Socket level encryption. Both symmetric and asymmetric encryption supported.
                </para>
            </listitem>
            <listitem>
                <para>New JMX support. (many thanks to Marco)</para>
            </listitem>
            <listitem>
                <para>New Hibernate second level cache provider (many thanks to Leo)</para>
            </listitem>
            <listitem>
                <para>Instance events for getting notified when a data structure instance (map,
                    queue, topic etc.) is created or destroyed.
                </para>
            </listitem>
            <listitem>
                <para>Eviction listener.
                    <literal>EntryListener.entryEvicted(EntryEvent)</literal>
                </para>
            </listitem>
            <listitem>
                <para>Fully 'maven'ized.</para>
            </listitem>
            <listitem>
                <para>Modularized...</para>
            </listitem>
            <listitem>
                <para>hazelcast (core library)</para>
            </listitem>
            <listitem>
                <para>hazelcast-wm (http session clustering tool)</para>
            </listitem>
            <listitem>
                <para>hazelcast-ra (JCA adaptor)</para>
            </listitem>
            <listitem>
                <para>hazelcast-hibernate (hibernate cache provider)</para>
            </listitem>
        </itemizedlist>
        <emphasis role="bold">1.6</emphasis>
        <itemizedlist>
            <listitem>
                <para>Support for synchronous backups and configurable backup-count for maps.
                </para>
            </listitem>
            <listitem>
                <para>Eviction support. Timed eviction for queues. LRU, LFU and time based eviction
                    for maps.
                </para>
            </listitem>
            <listitem>
                <para>Statistics/history for entries. create/update time, number of hits, cost. see
                    <literal>IMap.getMapEntry(key)</literal>
                </para>
            </listitem>
            <listitem>
                <para>
                    <literal>MultiMap</literal>
                    implementation. similar to google-collections and
                    apache-common-collections
                    <literal>MultiMap</literal>
                    but distributed and
                    thread-safe.
                </para>
            </listitem>
            <listitem>
                <para>Being able to
                    <literal>destroy()</literal>
                    the data structures when not needed
                    anymore.
                </para>
            </listitem>
            <listitem>
                <para>Being able to Hazelcast.shutdown() the local member.</para>
            </listitem>
            <listitem>
                <para>Get the list of all data structure instances
                    via<literal>Hazelcast.getInstances()</literal>.
                </para>
            </listitem>
        </itemizedlist>
        <emphasis role="bold">1.5</emphasis>
        <itemizedlist>
            <listitem>
                <para>Major internal refactoring</para>
            </listitem>
            <listitem>
                <para>Full implementation of<literal>java.util.concurrent.BlockingQueue</literal>.
                    Now queues can have configurable capacity limits.
                </para>
            </listitem>
            <listitem>
                <para>Super Clients: Members with no storage. If
                    <literal>-Dhazelcast.super.client=true</literal>
                    JVM parameter is set, that
                    JVM will join the cluster as a 'super client' which will not be a 'data
                    partition' (no data on that node) but will have super fast access to the cluster
                    just like any regular member does.
                </para>
            </listitem>
            <listitem>
                <para>Http Session sharing support for Hazelcast Web Manager. Different webapps can
                    share the same sessions.
                </para>
            </listitem>
            <listitem>
                <para>Ability to separate clusters by creating groups.
                    <link xlink:href="#ConfigGroup">ConfigGroup</link>
                </para>
            </listitem>
            <listitem>
                <para>
                    <literal>java.util.logging</literal>
                    support.
                </para>
            </listitem>
        </itemizedlist>
        <emphasis role="bold">1.4</emphasis>
        <itemizedlist>
            <listitem>
                <para>Add, remove and update events for queue, map, set and list</para>
            </listitem>
            <listitem>
                <para>Distributed Topic for pub/sub messaging</para>
            </listitem>
            <listitem>
                <para>Integration with J2EE transactions via JCA complaint resource adapter</para>
            </listitem>
            <listitem>
                <para>
                    <link xlink:href="#ExecutionCallback">ExecutionCallback</link>
                    interface for distributed tasks
                </para>
            </listitem>
            <listitem>
                <para>Cluster-wide unique id generator</para>
            </listitem>
        </itemizedlist>
        <emphasis role="bold">1.3</emphasis>
        <itemizedlist>
            <listitem>
                <para>Transactional Distributed Queue, Map, Set and List</para>
            </listitem>
        </itemizedlist>
        <emphasis role="bold">1.2</emphasis>
        <itemizedlist>
            <listitem>
                <para>Distributed Executor Service</para>
            </listitem>
            <listitem>
                <para>Multi member executions</para>
            </listitem>
            <listitem>
                <para>Key based execution routing</para>
            </listitem>
            <listitem>
                <para>Task cancellation support</para>
            </listitem>
        </itemizedlist>
        <emphasis role="bold">1.1</emphasis>
        <itemizedlist>
            <listitem>
                <para>Session Clustering with Hazelcast Webapp Manager</para>
            </listitem>
            <listitem>
                <para>Full TCP/IP clustering support</para>
            </listitem>
        </itemizedlist>
        <emphasis role="bold">1.0</emphasis>
        <itemizedlist>
            <listitem>
                <para>Distributed implementation of java.util.{Queue,Map,Set,List}</para>
            </listitem>
            <listitem>
                <para>Distributed implementation of java.util.concurrency.Lock</para>
            </listitem>
            <listitem>
                <para>Cluster Membership Events</para>
            </listitem>
        </itemizedlist>
    </para>
</sect1>
