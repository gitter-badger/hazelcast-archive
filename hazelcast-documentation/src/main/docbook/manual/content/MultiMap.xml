<?xml version='1.0' encoding='UTF-8'?>
<sect1 xml:id="MultiMap" version='5.0' xmlns='http://docbook.org/ns/docbook'
        >
    <title>Distributed MultiMap</title>
    <para>
        <literal>MultiMap</literal>
        is a specialized map where you can associate a key with multiple values.
        Just like any other distributed data structure implementation in Hazelcast,
        <literal>MultiMap</literal>
        is distributed/partitioned and thread-safe.

        <programlisting language="java"><![CDATA[import com.hazelcast.core.MultiMap;
import com.hazelcast.core.Hazelcast;
import java.util.Collection;

// a multimap to hold <customerId, Order> pairs
MultiMap<String, Order> mmCustomerOrders = Hazelcast.getMultiMap("customerOrders");
mmCustomerOrders.put("1", new Order ("iPhone", 340));
mmCustomerOrders.put("1", new Order ("MacBook", 1200));
mmCustomerOrders.put("1", new Order ("iPod", 79));

// get orders of the customer with customerId 1.
Collection<Order> colOrders = mmCustomerOrders.get ("1");
for (Order order : colOrders) {
    // process order
}

// remove specific key/value pair
boolean removed = mmCustomerOrders.remove("1", new Order ("iPhone", 340));
]]></programlisting>

    </para>
</sect1>
